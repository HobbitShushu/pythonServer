# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Definition

import flatbuffers

class proto_responseFriendRequest(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsproto_responseFriendRequest(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = proto_responseFriendRequest()
        x.Init(buf, n + offset)
        return x

    # proto_responseFriendRequest
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # proto_responseFriendRequest
    def Header(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from .proto_header import proto_header
            obj = proto_header()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # proto_responseFriendRequest
    def Targetidx(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # proto_responseFriendRequest
    def State(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

def proto_responseFriendRequestStart(builder): builder.StartObject(3)
def proto_responseFriendRequestAddHeader(builder, header): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(header), 0)
def proto_responseFriendRequestAddTargetidx(builder, targetidx): builder.PrependUint32Slot(1, targetidx, 0)
def proto_responseFriendRequestAddState(builder, state): builder.PrependUint8Slot(2, state, 0)
def proto_responseFriendRequestEnd(builder): return builder.EndObject()
